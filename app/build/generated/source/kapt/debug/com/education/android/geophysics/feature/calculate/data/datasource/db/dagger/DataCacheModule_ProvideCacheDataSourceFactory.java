// Generated by Dagger (https://google.github.io/dagger).
package com.education.android.geophysics.feature.calculate.data.datasource.db.dagger;

import com.education.android.geophysics.feature.calculate.data.datasource.db.CacheDataDao;
import com.education.android.geophysics.feature.calculate.data.datasource.db.DataCacheDataSource;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DataCacheModule_ProvideCacheDataSourceFactory
    implements Factory<DataCacheDataSource> {
  private final DataCacheModule module;

  private final Provider<CacheDataDao> daoProvider;

  public DataCacheModule_ProvideCacheDataSourceFactory(
      DataCacheModule module, Provider<CacheDataDao> daoProvider) {
    this.module = module;
    this.daoProvider = daoProvider;
  }

  @Override
  public DataCacheDataSource get() {
    return provideCacheDataSource(module, daoProvider.get());
  }

  public static DataCacheModule_ProvideCacheDataSourceFactory create(
      DataCacheModule module, Provider<CacheDataDao> daoProvider) {
    return new DataCacheModule_ProvideCacheDataSourceFactory(module, daoProvider);
  }

  public static DataCacheDataSource provideCacheDataSource(
      DataCacheModule instance, CacheDataDao dao) {
    return Preconditions.checkNotNull(
        instance.provideCacheDataSource(dao),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
