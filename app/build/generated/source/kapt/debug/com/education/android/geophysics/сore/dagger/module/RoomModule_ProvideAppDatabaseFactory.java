// Generated by Dagger (https://google.github.io/dagger).
package com.education.android.geophysics.сore.dagger.module;

import android.content.Context;
import com.education.android.geophysics.сore.data.AppDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class RoomModule_ProvideAppDatabaseFactory implements Factory<AppDatabase> {
  private final RoomModule module;

  private final Provider<Context> contextProvider;

  public RoomModule_ProvideAppDatabaseFactory(
      RoomModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public AppDatabase get() {
    return provideAppDatabase(module, contextProvider.get());
  }

  public static RoomModule_ProvideAppDatabaseFactory create(
      RoomModule module, Provider<Context> contextProvider) {
    return new RoomModule_ProvideAppDatabaseFactory(module, contextProvider);
  }

  public static AppDatabase provideAppDatabase(RoomModule instance, Context context) {
    return Preconditions.checkNotNull(
        instance.provideAppDatabase(context),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
